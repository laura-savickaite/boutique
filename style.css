/* ------------------------------------------------

                    Fonts

--------------------------------------------------- */

@font-face {
    font-family: Titreprincipal;
    src: url(Fonts/EloquentJFCaptionPro.ttf);
}

@font-face {
    font-family: AccentFont;
    src: url(Fonts/Cooper\ Black.ttf);
}

@font-face {
    font-family: SousTitreouAccent;
    src: url(Fonts/Butler_Medium.otf);
}

@font-face {
    font-family: LoremIpsum;
    src: url(Fonts/Butler_Regular.otf);
}




/* ------------------------------------------------

                    Custom properties

--------------------------------------------------- */

:root {
    --clr-black: 0, 0, 0;
    --clr-white: 255, 255, 255;
    --clr-lightpink: 250, 225, 221;
    --clr-pink: 254, 197, 187;
    --clr-mint: 216, 226, 220;
    --clr-lightgrey: 232, 232, 228;

    /* à utiliser comme ceci : <div class="bg-light">
    .bg-light{
        background-color/ou color : rgb(var(--clr-white));
    }
    comme ceci je serai en mesure de pouvoir gérer les alpha valeurs (opacité) au lieu d'avec le #0000 */

}


/* ------------------------------------------------

                    RESET

--------------------------------------------------- */


/* Box sizing */

*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reset margin */

body,
h1,
h2,
h3,
h4,
figure,
picture {
    margin: 0;
    padding: 0;
}

/* Set up the body */

body {
    line-height: 1.5;
    min-height: 100vh;
}

/* Make images easier to work with (si dieu le veut) */

img,
picture {
    max-width: 100%;
    display: block;
}

/* Make forms elements easier to work with */

input,
button,
textarea,
select {
    font: inherit;
}

/* Remove animations for those who turned them off (pour ceux qui décident d'enlever les animations dans lur browser : question d'accessiblilité) */

@media (prefers-reduced-motions: reduce){
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}


/* ------------------------------------------------

                UTILITY CLASSES

--------------------------------------------------- */
/* Utility classes : 
-do one thing, and they do that very well
-often only have one declaration, but they can have multiple when required 
-allow things to be much more modular and allow us to write much less code in the long run
*/

.flex {
    display: flex;
    gap: var(--gap, 1rem);
}

.grid {
    display: grid;
    gap: var(--gap, 1rem);
}

/* souvent quand on veut centrer un conteneur avec qqchose à l'intérieur comme des images etc..., c'est responsive*/
.container {
    padding: 0 2em;
    max-width: 80rem;
    margin-inline: auto;
}

/* (screen reader only -> pour les personnes malvoyantes qui ont des screen reader donc des assistive technologies qui leur lit les pages web) */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap; /* added line */
    border: 0;
}

/* exemple comment utiliser (à essayer avec des div couleur pour que vous compreniez comment ça va marcher) 

-> <div class="container flex" style="--gap : 5rem;"> 
== ceci donne plus de personnalisation à notre class communes/utilities, en injectant style directement dans notre div surtout pour changer les var des gap
SINON rajouter avant container une autre class/un autre mot donc et après le déclarer dans la page css en rajoutant : --gap : 5em; et toutes les autres propriétés qu'il nous faut

    <div class="box">a</div>
    <div class="box">b</div>
    <div class="box">c</div>
    <div class="box">d</div>

</div>*/














.txt-center {
	text-align: center;
}
.hide {
	display: none;
}
  
.clear {
	float: none;
	clear: both;
}
  
.rating {
	  width: 90px;
	  /* unicode-bidi: bidi-override; */
	  direction: rtl;
	  text-align: center;
	  position: relative;
}
  
.rating > label {
	  float: right;
	  display: inline;
	  padding: 0;
	  margin: 0;
	  position: relative;
	  width: 1.1em;
	  cursor: pointer;
	  color: #000;
}
  
.rating > label:hover,
.rating > label:hover ~ label,
.rating > input.radio-btn:checked ~ label {
	  color: transparent;
}
  
.rating > label:hover:before,
.rating > label:hover ~ label:before,
.rating > input.radio-btn:checked ~ label:before,
.rating > input.radio-btn:checked ~ label:before {
	  content: "\2605";
	  position: absolute;
	  left: 1px;
	  color: #161616;
}
